Hinge Dating App Automation Bot - Development Outline

Current Implementation:

1. Profile Processing Flow:
   - Profile Limit:
     * Maximum of 40 profiles processed
     * Exits gracefully when limit reached
     * Early exit if end of profiles detected
   
   - Early Stopping:
     * Checks for any of these messages before processing each profile:
       - "You've seen everyone for now"
       - "Try changing your filters so more people match your criteria - or check again later!"
       - "Change filters"
       - "Review skipped profiles"
       - "You're out of free likes for today"
       - "You're out of free"
       - "likes for today"
     * Uses OCR with 0.8 similarity threshold
     * Saves screenshot of end message for verification
     * Creates visual debug overlay showing matched text
     * Exits gracefully with specific end message
   
   - Target Interactions:
     * Like profiles while disliking undesirables based on AI evaluation
     * If 4-7 consecutive likes occur without any dislikes, force dislike on the next profile
     * Continue liking until reaching a total of 8 likes
     * After reaching 8 likes, reset all counters (consecutive likes, total likes, dislikes)
     * For forced dislikes, still capture and save screenshots without AI evaluation
   
   - Profile Analysis:
     * Takes 7 screenshots while scrolling down (initial + 6 scrolls)
     * For forced dislikes, still captures screenshots and saves to desktop
     * For normal profiles, processes screenshots with AI in separate thread
     * Scrolls back to top while AI processes
     * Waits for AI response
   
   - Profile Filtering:
     * Dislikes if AI returns empty response
     * Dislikes if prompt match confidence < 0.8
     * Dislikes if prompt not found after 3 attempts
     * Resets interaction counter on any dislike
     * AI automatically filters profiles with these undesirable traits:
       - Body Type Analysis:
         · Visible excess weight or body fat
         · Body width appears wider than typical fit/skinny woman
         · Visible stomach protrusion that extends beyond the waistline (bulging out)
         · Face shape is rounder with less defined jawline
         · Only face/high angle photos (hiding body)
       - Low Quality Photos:
         · Majority of photos are blurry/pixelated
         · Heavy filters or editing in majority of photos
         · Screenshots or reposts in multiple photos
       - Male Features:
         · Adam's apple visible in the throat
         · Facial hair (mustache or beard)
         · Flat chest with no boob growth visible
   
   - Special Case Handling:
     * "Two truths and a lie" prompt detection:
       - Always treated as a poll prompt regardless of format
       - Appears in two possible formats:
         · Standard poll format (three distinct options each with black heart with white center)
         · Paragraph format (all three options in a single paragraph without heart icons)
       - Never used for conversation starters
       - When in paragraph format, only two other prompt/response pairs will be available for conversation starters
   
   - Results Storage:
     * Saves all profile data in organized directory structure:
       - results/profile_X/screenshots/ - Contains all screenshots
       - results/profile_X/response.json - Contains AI response and timestamp
     * Duplicates results in desktop accessible location:
       - /app/desktop/PitchPerfect_Results_{TIMESTAMP}/profile_X/
     * Saves results for every profile, regardless of outcome
     * Includes timestamp with each response
     * Maintains original screenshot files in images/ directory

2. Screenshot Capture and Analysis:
   - Takes 7 screenshots total (initial + 6 scrolls)
   - Uses consistent 68% scroll distance for reliability
   - Captures full profile content in sequential screenshots
   - Saves as profile_{count}_part{i}.png
   - Creates visualization overlays for debugging
   - Uses OCR with pytesseract to extract text from images
   - Implements visual debug overlays with boxes, lines, and paragraphs
   - Groups text into logical lines and paragraphs based on spatial proximity

3. Prompt Detection Improvements:
   - Enhanced OCR-based text detection with fuzzy matching
   - Multi-step prompt location strategy:
     * Checks initial screenshot for prompt
     * Scrolls up once to look for prompt if not found initially
     * Scrolls back to original position if not found after scrolling up
     * Falls back to center-screen tap if prompt cannot be found
   - Implements visualization for each detection attempt
   - Refactored to use modular helper function for prompt matching logic
   - Sanitizes debug logs to prevent base64 data from cluttering output

4. AI Integration:
   - System Prompt:
     * Profile structure guide with 7 screenshots analysis
     * Detailed trait detection for filtering undesirable profiles
     * 4-step conversation starter generation guideline:
       1. Direct acknowledgment of something visible in profile
       2. Adding woman's name after the acknowledgment for personalization
       3. Brief connection between her response and date activity
       4. Specific date activity suggestion related to her interests
     * Quality metrics for ranking conversation starters
   
   - Response Processing:
     * Parses JSON from text response by extracting between first { and last }
     * Returns JSON with:
       - prompt: Exact prompt text
       - response: User's response
       - conversation_starter: Generated conversation starter
       - screenshot_index: Location of prompt (0-6)
     * Handles empty or error responses gracefully
     * Returns empty response for profiles with undesirable traits
   
   - Prompt Matching:
     * Matches against authoritative prompts.txt
     * Requires 0.8 confidence threshold
     * Uses fuzzy matching with similarity ratio calculation
     * Logs all potential matches for debugging
     * Reports best match with confidence score

5. Prompt Location and Response:
   - Location Strategy:
     * Scrolls to target screenshot indicated by AI
     * Three attempts to find prompt:
       1. On target screenshot
       2. One screen up from target
       3. Back on target screenshot after scrolling down
     * Additional scroll-up-and-check in the OCR detection phase
     * Falls back to bottom-of-profile approach if all attempts fail
   
   - Response Flow:
     * Waits 1 second for UI to stabilize after prompt is opened
     * Finds "Add a comment" box using OCR
     * Clears any existing text with backspace keys
     * Types AI-generated conversation starter
     * Closes keyboard using back key
     * Finds "Send Like" button using OCR
     * Clicks to send response
     * Visually documents each step with debugging overlays

6. Error Handling and Logging:
   - Comprehensive logging:
     * Detailed debug logging to file with timestamps
     * Console output for important events
     * Visual overlays saved for debugging
     * Sanitized API payloads to prevent log clutter
   
   - Error recovery:
     * Try-except blocks throughout the codebase
     * Fallback strategies for most failure points
     * Graceful degradation when optimal path fails
     * Detailed error logging with tracebacks at debug level
   
   - Profile Filtering:
     * Multiple layers of validation
     * Consistent handling of rejection cases
     * Reset interaction counters on rejection

7. Multithreading:
   - Parallel processing:
     * Screenshot capture and scrolling in main thread
     * AI processing in background thread
     * Thread synchronization with join()
     * Thread-safe global variable access with locks
     * Efficient use of waiting time during AI processing

8. Configuration:
   - Environment variables for device connection
   - Random targeting for interaction counts
   - Timestamp-based result directories
   - Authoritative reference files:
     * format.txt - Profile structure information
     * prompts.txt - Available Hinge prompts
     * captions.txt - Possible photo captions
     * polls.txt - Available poll options
     * locations.txt - Madison, WI establishments